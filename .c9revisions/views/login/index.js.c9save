{"ts":1361751877540,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"exports.init = function(req, res){\n  //are we logged in?\n  if (req.isAuthenticated()) { \n    res.redirect(req.user.defaultReturnUrl());\n  }\n  else {\n    if (!req.query.returnUrl) req.query.returnUrl = '/';\n    res.render('login/index', { returnUrl: req.query.returnUrl });\n  }\n};\n\nexports.login = function(req, res){\n  //create a workflow event emitter\n  var workflow = new req.app.utility.Workflow(req, res);\n  \n  workflow.on('validate', function() {\n    if (!req.body.username) workflow.outcome.errfor.username = 'required';\n    if (!req.body.password) workflow.outcome.errfor.password = 'required';\n    \n    //return if we have errors already\n    if (Object.keys(workflow.outcome.errfor).length != 0) return workflow.emit('response');\n    \n    workflow.emit('attemptLogin');\n  });\n  \n  workflow.on('attemptLogin', function() {\n    req._passport.instance.authenticate('local', function(err, user, info) {\n      if (err) return workflow.emit('exception', err);\n      \n      if (!user) {\n        workflow.outcome.errors.push('Username and password combination not found or your account is inactive.');\n        return workflow.emit('response');\n      }\n      else {\n        req.login(user, function(err) {\n          if (err) return workflow.emit('exception', err);\n          workflow.outcome.defaultReturnUrl = user.defaultReturnUrl();\n          workflow.emit('response');\n        });\n      }\n    })(req, res);\n  });\n  \n  //start the workflow\n  workflow.emit('validate');\n};"]],"start1":0,"start2":0,"length1":0,"length2":1473}]],"length":1473}
